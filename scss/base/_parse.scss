$_base-element-defaults: (
	add-rows-to-line-height: 0
);

//* Base Parse
/// Converts the shorthand to the complete element map
///
/// @group Helpers
///
/// @param {List} $shorthand
/// Shorthand expression to define the font-size, containing:
/// - font-size (default: font-size set in settings)
/// - increased line-height per row
/// @param {Map} $config
///
/// @return {map}     Map of element settings
///
/// @throw when a shorthand value is not recognized
@function _base-parse($shorthand, $config: $base) {
	$return: ();
	$error: false;

	$config: _base-settings($config);

	// error occured
	// @if type-of($config) != "map" {
	// 	@return $config;
	// }

	$root-font-size: map-get($config, "root-font-size");

	@for $i from 1 through length($shorthand) {
		$item: nth($shorthand, $i);
		$type: type-of($item);
		$details: "[#{$type}] `#{$item}`";

		@if $type == "number" and unitless($item) {
			// add line height property
			$return: _base-map-add($return, "add-rows-to-line-height", $item);
		} @else if $type == "number" and _base-valid-unit($item, $root-font-size) {
			// font-size property
			$return: _base-map-add($return, "font-size", $item);
		} @else if $type == "string" and ($item == "relative" or $item == "absolute" or $item == "static") {
			// math property
			$return: _base-map-add($return, "math", $item);
		} @else {
			$error: true;
		}

		// when in debug mode, check if error occured in _base-map-add
		@if $_base-error-output-override == true and type-of($return) == "string" {
			@return $return;
		} @else if $error {
			@return _base-error("Unknown shorthand property: #{$details}", "_base-parse");
		}
	}

	@if type-of($return) == "map" {
		@return map-merge($_base-element-defaults, $return);
	} @else {
		@return _base-error("Unknown error happened", "_base-parse");
	}
}