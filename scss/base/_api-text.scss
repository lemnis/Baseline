////
///  @group Text
///  @TODO add support for different vertical-align values
////

// Need to move
@function _base-get-line-height($config) {
	$rows: _base-math-rows(
		$font-size,
		$add-rows-to-line-height,
		$root-font-size,
		$row-height,
		$min-line-height
	);

	@return _base-math-line-height($rows, $font-size, $root-font-size, $row-height);
}

//* Base Font-size
/// It returns the extracted font-size from the shorthand,
/// if non given it will fallback on the base font-size.
///
/// The un-prefixed alias `font-size()` is available by default.
///
/// @param {list} $short -
///   Shorthand expression to define the current text properties,
///   optionally containing:
///   - a unit number, current font-size
///   - a unitless number, extra rows to add per text line
/// @param {Map} $config [$base] -
///   Optional map of Base configuration settings.
///   See `$base` documentation for details.
///
/// @return {length}	Raw font-size
///
/// @example scss
///   .foo {
///     font-size: root-font-size(1em);
///   }
@function root-font-size($short, $config: $base) {
	$config: _base-compile($short, $config);

	@return map-get($config, "font-size");
}

//* Base Line-height
/// Used to return the line-height needed for given font-size
/// to maintain the baseline grid
///
/// The un-prefixed alias `line-height()` is available by default.
///
/// @param {list} $short -
///   Shorthand expression to define the current text properties,
///   optionally containing:
///   - a unit number, current font-size
///   - a unitless number, extra rows to add per text line
/// @param {Map} $config [$base] -
///   Optional map of Base configuration settings.
///   See `$base` documentation for details.
///
/// @return {length}	Calculated line-height
///
/// @example scss
///   .foo {
///     line: base-line-height(1em 0);
///   }
@function base-line-height($short, $config: $base) {
	$config: _base-compile($short, $config);

	@return _base-get-line-height($config);
}

//* Base Top
/// Used to return the top offset needed for given font-size
/// to maintain the baseline grid
///
/// The un-prefixed alias `top()` is available by default.
///
/// @param {list} $short -
///   Shorthand expression to define the current text properties,
///   optionally containing:
///   - a unit number, current font-size
///   - a unitless number, extra rows to add per text line
/// @param {Map} $config [$base] -
///   Optional map of Base configuration settings.
///   See `$base` documentation for details.
///
/// @return {length}	Calculated line-height
///
/// @example scss
///   .foo {
///     margin-top: base-top(1em);
///   }
@function base-top($short, $config: $base) {
	$config: _base-compile($short, $config);

	$font-size: 	map-get($config, "font-size");
	$cap-height: 	map-get($config, "cap-height");
	$line-height: 	_base-get-line-height($config);

	@return _base-math-shoulder-top($font-size, $line-height, $cap-height);
}

//* Base Bottom
/// Used to return the bottom offset needed for given font-size
/// to maintain the baseline grid
///
/// The un-prefixed alias `bottom()` is available by default.
///
/// @param {list} $short -
///   Shorthand expression to define the current text properties,
///   optionally containing:
///   - a unit number, current font-size
///   - a unitless number, extra rows to add per text line
/// @param {Map} $config [$base] -
///   Optional map of Base configuration settings.
///   See `$base` documentation for details.
///
/// @return {length}	Calculated line-height
///
/// @example scss
///   .foo {
///     margin-bottom: base-bottom(1em);
///   }
@function base-bottom($short, $config: $base) {
	$config: _base-compile($short, $config);

	$font-size: 	map-get($config, "font-size");
	$cap-height: 	map-get($config, "cap-height");
	$line-height: 	_base-get-line-height($config);
	$root-font-size: map-get($config, "root-font-size");
	$row-height: map-get($config, "row-height");

	@return _base-math-shoulder-bottom(
		$font-size, $line-height, $root-font-size, $row-height, $cap-height
	);
}